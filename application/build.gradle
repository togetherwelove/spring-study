buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
  id 'java'
  id 'org.springframework.boot' version '2.7.18-SNAPSHOT'
  id 'io.spring.dependency-management' version '1.0.15.RELEASE'
  id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'dev.chanwook.springstudy'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = '11'
}

repositories {
  mavenCentral()
  maven { url 'https://repo.spring.io/milestone' }
  maven { url 'https://repo.spring.io/snapshot' }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {

	implementation project(':domain')

	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	// junit
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.h2database:h2'
	
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	
	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	
	// jjwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	
	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
   	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    // swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDsl
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
   jpa = true
   querydslSourcesDir = querydslDir
}
sourceSets {
   main.java.srcDir querydslDir
}
compileQuerydsl{
   options.annotationProcessorPath = configurations.querydsl
}
configurations {
   compileOnly {
      extendsFrom annotationProcessor
   }
   querydsl.extendsFrom compileClasspath
}